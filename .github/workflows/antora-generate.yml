name: Generate Documentation

on:
  push:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  deployments: write

#
# This workflow has only one job, and it uses three Actions:
# - checkout@v2           is used to clone this enclosing repository
#                         stonefifteen/rest-engDocMethod essentially
#                         to retrieve the antora-playbook.yml file for Antora to use.
#                         Moving to v3 of this action is planned; in the meantime version v2 is
#                         still being used. 
#                         For v2 see: https://github.com/actions/checkout/archive/refs/tags/v2.zip
#                         For v3 see: https://github.com/actions/checkout
#
# - actions-gh-pages@v3   simplifies publishing the content generated by Antora into Github Pages,
#                         without the need for any manual setup of the repository.
#                         See: https://github.com/peaceiris/actions-gh-pages
#
# - setup-node@v2         simplifies the installation of Node.js and the npm package manager. Moving 
#                         to v3.41 is planned, which uses checkout@v3 and setup-node@v3; in the meantime
#                         v2 is still being used.
#                         For v2 see: https://github.com/actions/setup-node
#                         For v3 see: https://github.com/actions/setup-node
jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      
      # These two steps *must* be explicitly coded here, as we have
      # to checkout our own repository into this worker container's
      # runtime environment.

      - name: Setup Git Credentials
        run: |
          git config --global init.defaultBranch main
          git config --global credential.helper store
          cat <<EOF > ${HOME}/.git-credentials
          https://${{ secrets.ANTORA_PAT }}@github.com
          EOF
  
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Generate the site
        run: |
          for func in scripts/functions/*
          do
            . ${func}
          done

          fetchGeneratorRepo https://github.com/stonefifteen/rest-engDocMethod.git
                
          mkdir -p build/site
          touch build/site/.nojekyll
          mkdir -p build/site/plantuml/themes
          cp -r plantuml build/site


          generateSimpleSite antora-playbook.yml

      - name: Configure Pages
        uses: actions/configure-pages@v2

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: build/site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

        # with:
        #   github_token: ${{ secrets.GITHUB_TOKEN }}
      
      # - name: Publish to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: build/site

      # The Antora Action was tested, but did not work properly given the
      # need for asciidoctor-kroki, etc. The version tested was v0.2.4, so it
      # is planned to test the action once it reaches v0.3.x, even though it may not
      # be a fit given that we need to pre-stage the content repositorie (i.e. not
      # have Antora pull directly from the Git repositories).
      #
      # In the meantime Antora must be run from the "command line"; therefore we need
      # to setup the standard Git credential store helper by creating the
      # .git-credentials file.
      #
      # It is important to note that the credential that is stored has to be
      # of the form: https://<owner-of-repo>:<personal-access-token>@github.com
      #
      # The credential is created by:
      # a)  Creating a PAT for the repo's owner account, specifying that it's SSO-authorized
      #     for this and all other repositories to be pulled from. Follow these steps:
      #     1 - Navigate from the owning account's avatar (upper right on the web page) to:
      #     2 - Settings->Developer settings->Personal acess tokens
      #     3 - click on Generate new token
      #     4 - Be sure to temporarily copy the nwe token value, as it is need in b) below.
      #     5 - Enter what is essentially the name of the token in the Note field, e.g. AntoraPAT
      #     6 - Click the top-most checkbox of these OAuth scopes:
      #         repo
      #         workflow
      #         notifications
      # 
      # b)  To allow workflows in this repo to access the PAT, a Secret named ANTORA_PAT is
      #     manually created in advance by following these steps:
      #     1 - Click on New repository secret
      #     2 - Name the secret, for this example: ANTORA_PAT
      #     3 - Enter the secret's value, concatenating the username, a colon, and the copied PAT
      #     4 - Click Add secret
      
     
      #
      # Clone this repo, which has very little content in the main branch, so that
      # we have the antora-playbook.yml file ready for Antora to use.
      #
    

      #
      # Antora is Node-based, so install Node.js and npm.
      #
      # - name: Install Node.js
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '16'

      #
      # Of course Antora itself needs to be installed, and then
      # the Lunr extension is installed to provide the content search
      # capability, and the Kroki extension is installed to support
      # PlantUML diagrams.
      #
      # - name: Install Antora as well as the Kroki, Antora, and Lunr extensions
      #   run: |
      #     npm i -g -D -E @antora/cli@3.0.0 @antora/site-generator@3.0.0
      #     curl -O https://registry.npmjs.org/asciidoctor-kroki/-/asciidoctor-kroki-0.15.4.tgz
      #     npm i asciidoctor-kroki-0.15.4.tgz
      #     npm i antora @antora/lunr-extension

      # - name: Generate Site
      #   run: |
      #     # npx antora --fetch --stacktrace antora-playbook.yml
      #     npx antora --git-credentials-path ${HOME}/.git-credentials --stacktrace antora-playbook.yml
      #
      # If there are issues in running Antora, then either or both of these options can be added
      # to debug the executions of Antora:
      #
      #   If there is a question of which current working directory is being used in the workflow,
      #   such that the credentials file might not be getting picked up by antora, then the location
      #   can be explicitly specified:
      #     --git-credentials-path ${HOME}/.git-credentials
      #
      #   A verbose logging by Antora of its progress - which will be picked up in the workflow's log - is
      #   enabled by specifying:
      #     --stacktrace
      #
      # The full-blown debuggin invokation of Antora will look like this:
      #   npx antora --git-credentials-path ${HOME}/.git-credentials --stacktrace antora-playbook.yml

      #
      # This action greatly simplifies the creation of published content into Github Pages
      # Note that the automatically generated GITHUB_TOKEN is used, as we're publishing to
      # this repo, therefore a PAT is not required. YES you want to use secrets.GITHUB_TOKEN , and
      # NOT want to use the secrets.ANTORA_PAT identifier that is used above. 
      #
      # - name: Publish to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: build/site




