
# Replaces the version key value with the specified branch
#	name, and then commits this change locally to the branch
#	bearing that name.
#
#	Input(s):
#
#		branch-name												#	The name of the branch to substitute into
#																			#	antora.yml.
#	Returns:
#		0																	# The entire process succeeded.
#
#		1																	#	Some step in the process failed.
#
#	Echos:
#		STDERR:	Notification that the branch name has not been passed in,
#						and any error output from any step
#
#		STDOUT:	NONE
#
#	Testing status:
#		UNTESTED UNFINISHED

createAntoraYmlForVersionBranch ()
{
	if [[ $# -lt 2 ]]
	then
		echo "You must specify the default branch name and the version" >&2
		return 1
	fi

	local status=0																									# Holds the return status
	local defaultBranch=${1}
	local branch=${2}
	local version=${branch}

	[[ "${branch}" = "main" ]] &&	version="~"

	#	The first attempt to switch may fail, as the branch may only be "known"
	#	remotely at this point, in which case attempt to create the branch locally
	# and then switch to it.

	if ! git switch ${branch}
	then
		if ! git switch -c ${branch}
		then
			# If we simply can't switch to the branch, then we cannot move forward,
			# return error status
			return 1
		fi
	fi

	cat <<EOF >docs/antora.yml
name: documentation
version: ${version}
title: Documentation
asciidoc:
  attributes:
    source-language: asciidoc@
    xrefstyle: short@
    example-caption: false
    listing-caption: Example@
    version-node-major: '16'
    version-node: '16.13.1'
    version-npm: '8.2.0'
    url-node-releases: https://nodejs.org/en/about/releases/
    url-chat: https://antora.zulipchat.com
    url-repo: https://gitlab.com/antora/antora
    url-asciidoc: https://docs.asciidoctor.org/asciidoc/latest
EOF

	# Now that we've created the docs/antora.yml file in the current branch,
	# stage it and then commit the change in Git

	if git add docs/antora.yml
	then
		echo "Git added docs/antora.yml, branch ${branch}"
		if ! git commit -m "Created antora.yml with version ${version}"
		then
			status=1
		fi
	else
		echo "Failed to create antora.yml for branch ${branch}"
		status=1
	fi
	
	# Now switch back to the default branch, and the return status from 
	# this function is the status of the git switch command

	git switch ${defaultBranch}

}
